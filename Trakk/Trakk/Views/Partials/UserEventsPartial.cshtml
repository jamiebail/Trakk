@using API.Helpers
@model Trakk.Viewmodels.EventsListViewModel

<p class="createevent">

    <a style="cursor: pointer">
        <span style="cursor: pointer" class="glyphicon glyphicon-plus"></span>
        <p>Create Event</p>
    </a>
</p>

@foreach (var Event in Model.Events)
{
    switch (Event.Type)
    {
        case TrakkEnums.EventType.Training:
            @Html.Partial("/Views/Partials/TrainingEventPartial.cshtml", Event)
            break;
        case TrakkEnums.EventType.Social:
            @Html.Partial("/Views/Partials/SocialEventPartial.cshtml", Event)
            break;
    }

        @*<div class="col-md-6 widget-container">
            <div class="event-widget  col-xs-12">
                @*<a href="@Url.Action("Edit", "Events", new {id = item.Id})"><span class="glyphicon glyphicon-pencil edit-team"></span></a>
                <div class="event-date col-xs-3">
                        @Html.DisplayFor(modelItem => item.Type)
                </div>
                <div class="event-text col-xs-6">
                    <h4> @Html.DisplayFor(modelItem => item.Title)</h4>

                </div>
                <h5>@Html.DisplayFor(modelItem => item.Location)</h5>
                <hr class="clear"/>
                <div class="col-xs-12">
                    <span>@Html.DisplayFor(modelItem => item.Start.Value.DayOfWeek)</span>
                    <span>@Html.DisplayFor(modelItem => item.Start.Value.TimeOfDay)</span>
                    <span>@Html.DisplayFor(modelItem => item.End.Value.TimeOfDay)</span>
                </div>
                <hr class="clear" />
                <div class="col-xs-12">
                    @Html.DisplayFor(modelItem => item.Comments)
                    @Html.DisplayFor(modelItem => item.Attending)
                    @Html.DisplayFor(modelItem => item.Invited)
                    @Html.DisplayFor(modelItem => item.AttendanceState)
                </div>

            </div>

        </div>*@
    }


<div class="clear"></div>

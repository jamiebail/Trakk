@model Trakk.Viewmodels.EventEditViewModel

@using (Html.BeginForm("Edit", "Events", FormMethod.Post, new { @class = "eventForm col-lg-7" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Edit an Event</h4>
        <hr />
        <h4>Team</h4>

        @Html.HiddenFor(x => x.Event.Id, new {id = Model.Event.Id, @class="eventId"})
        @Html.HiddenFor(x => x.Event.Id, new {id = Model.Event.TeamId, @class="teamId"})

        <div class="form-group">
            @Html.LabelFor(model => model.Event.Type, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Event.Type, htmlAttributes: new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.Event.Type, "", new {@class = "text-danger"})
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Event.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Event.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Event.Title, "", new { @class = "text-danger" })
            </div>
        </div>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Event.Start, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Event.Start, new { htmlAttributes = new { @class = "form-control datetimepicker", @Value = Model.Event.Start.Value.ToUniversalTime() } })
                @Html.ValidationMessageFor(model => model.Event.Start, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Event.End, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Event.End, new { htmlAttributes = new { @class = "form-control datetimepicker", @Value = Model.Event.End.Value.ToUniversalTime() } })
                @Html.ValidationMessageFor(model => model.Event.End, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Event.Location, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Event.Location, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Event.Location, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Event.Comments, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Event.Comments, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Event.Comments, "", new { @class = "text-danger" })
            </div>
        </div>

    </div>
}


<div class="col-lg-5">
    <h4 class="col-lg-9">Invite Members</h4>
    <button id="inviteall" class="col-lg-3 btn btn-success">Invite All</button>
    <hr style="clear:both" />
    <ul data-role="listview" data-filter="true" class="selected-users col-lg-8">
        @foreach (var member in Model.Members)
             {
                 <li class="col-xs-6 user-widget selected">
                     <div class="image"></div><span hidden class="id">@member.Id</span><span class="name">@member.Name</span>
                 </li>
             }
        @foreach (var member in Model.AllMembers)
             {
                 <li class="col-xs-6 user-widget">
                     <div class="image"></div><span hidden class="id">@member.Id</span><span class="name">@member.Name</span>
                 </li>
             }
    </ul>
</div>

<div class="clear"></div>
<div>
    <button id="editEvent">Edit Event</button>
</div>
@model Trakk.Viewmodels.FixtureCreateViewModel

    <div class="form-horizontal">

        <hr />
        <div class="toolBar row">
            <div class="formations-bar col-xs-5">
                <div class="formation-widget"></div>
            </div>
            <div class="col-xs-2 button-space">
                <div class="saveButton">
                    <span class="glyphicon glyphicon-save"></span>
                </div>
            </div>

            <div class="col-xs-5 formations-bar-second">
                <div class="formation-widget"></div>
            </div>
        </div>
        <div id="formation-interface">
            <div class="pitchFrame" oncontextmenu="return false;">

                <div>
                    <div class="col-xs-4 editbutton"><span class="glyphicon glyphicon-pencil"></span></div>
                    <div class="col-xs-4">@Html.TextBox("formation-name", null, new { placeholder = "Formation Name" })</div>
                    <div class="col-xs-4 plusbutton">
                        <span class="glyphicon glyphicon-plus"></span>
                    </div>
                </div>
                <img class="pitch-image"/>

            </div>
            <div class="team-member-widget"></div>
        </div>
        <div class="lower">
            <div id="mainBody">


                <div id="loadingDiv">
                    <img src="~/Images/infinity.gif"/>
                </div>


                <p hidden id="team-id"></p>
                <h4>Will you be</h4>
                <div class="row">
                    <div class="homeoraway">
                        <div class="col-xs-5">
                            <button id="Home" class="btn btn-default">Home</button>
                        </div>
                        <div class="col-xs-2">
                            <h4>or</h4>
                        </div>
                        <div class="col-xs-5">
                            <button id="Away" class="btn btn-default">Away</button>
                        </div>
                        <div class="clear"></div>
                    </div>
                </div>

                <div>

                    <div class="col-xs-5">
                        <h4>Your Team</h4>
                        @Html.DropDownListFor(model => model.UserTeams, new SelectList(Model.UserTeams, "Value", "Text"), new {id = "homeTeam"})
                    </div>
                    <div class="col-xs-2">
                        <h2>V</h2>
                    </div>

                    <div class="col-xs-5">
                        <h4>Opponents</h4>
                        @Html.DropDownListFor(model => model.UserTeams, new SelectList(Model.AllTeams, "Value", "Text"), new {id = "awayTeam"})
                    </div>


                    @*<div class="form-group">
                    @Html.LabelFor(model => model.Fixture.Easting, htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Fixture.Easting, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.Fixture.Easting, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Fixture.Northing, htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Fixture.Northing, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.Fixture.Northing, "", new {@class = "text-danger"})
                    </div>
                </div>*@

                    @*<div class="form-group">
                    @Html.LabelFor(model => model.Fixture.State, htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.EnumDropDownListFor(model => model.Fixture.State, htmlAttributes: new {@class = "form-control", placeholder="Start Time"})
                        @Html.ValidationMessageFor(model => model.Fixture.State, "", new {@class = "text-danger"})
                    </div>
                </div>*@

                    <div class="form-group">

                        <div class="col-md-6">
                            <span class="glyphicon glyphicon-time start-glyphicon"></span>
                            @Html.EditorFor(model => model.Fixture.Start, new {htmlAttributes = new {@class = "form-control datetimepicker", placeholder = "Start Time", type="text"}})
                            @Html.ValidationMessageFor(model => model.Fixture.Start, "", new {@class = "text-danger"})
                        </div>

                        <div class="col-md-6">
                            <span class="glyphicon glyphicon-time end-glyphicon"></span>
                            @Html.EditorFor(model => model.Fixture.End, new {htmlAttributes = new {@class = "form-control datetimepicker", placeholder = "End Time"}})
                            @Html.ValidationMessageFor(model => model.Fixture.End, "", new {@class = "text-danger"})
                        </div>

           

                        <div class="col-md-6">
                            <span class="glyphicon glyphicon-map-marker map-glyphicon"></span>
                            @Html.EditorFor(model => model.Fixture.Location, new {htmlAttributes = new {@class = "form-control", placeholder = "Location"}})
                            @Html.ValidationMessageFor(model => model.Fixture.Location, "", new {@class = "text-danger"})
                        </div>


                        <div class="col-md-6">
                            <span class="glyphicon glyphicon-comment comment-glyphicon"></span>
                            @Html.EditorFor(model => model.Fixture.Comments, new {htmlAttributes = new {@class = "form-control", placeholder = "Comments"}})
                            @Html.ValidationMessageFor(model => model.Fixture.Comments, "", new {@class = "text-danger"})
                        </div>
                    </div>
                </div>

                <div class="col-md-12">
                    <input type="submit" value="Create" id="submitFixture" class="btn btn-success" />
                </div>
            </div>

        </div>
    </div>

@section Scripts{
    <script>

    </script>
}